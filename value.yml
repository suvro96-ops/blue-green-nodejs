COMPUTED VALUES:
additionalAgents: {}
additionalClouds: {}
agent:
  TTYEnabled: false
  additionalContainers: []
  alwaysPullImage: false
  annotations: {}
  args: ${computer.jnlpmac} ${computer.name}
  command: null
  componentName: jenkins-agent
  connectTimeout: 100
  containerCap: 10
  customJenkinsLabels: []
  defaultsProviderTemplate: ""
  directConnection: false
  disableDefaultAgent: false
  enabled: true
  envVars: []
  garbageCollection:
    enabled: false
    namespaces: ""
    timeout: 300
  hostNetworking: false
  idleMinutes: 0
  image:
    registry: ""
    repository: jenkins/inbound-agent
    tag: 3327.v868139a_d00e0-5
  imagePullSecretName: null
  inheritYamlMergeStrategy: false
  instanceCap: 2147483647
  jenkinsTunnel: null
  jenkinsUrl: null
  jnlpregistry: null
  kubernetesConnectTimeout: 5
  kubernetesReadTimeout: 15
  livenessProbe: {}
  maxRequestsPerHostStr: "32"
  namespace: null
  nodeSelector: {}
  nodeUsageMode: NORMAL
  podLabels: {}
  podName: default
  podRetention: Never
  podTemplates: {}
  privileged: false
  resources:
    limits:
      cpu: 512m
      memory: 512Mi
    requests:
      cpu: 512m
      memory: 512Mi
  restrictedPssSecurityContext: false
  retentionTimeout: 5
  runAsGroup: null
  runAsUser: null
  secretEnvVars: []
  serviceAccount: null
  showRawYaml: true
  sideContainerName: jnlp
  skipTlsVerify: false
  usageRestricted: false
  useDefaultServiceAccount: true
  volumes: []
  waitForPodSec: 600
  websocket: false
  workingDir: /home/jenkins/agent
  workspaceVolume: {}
  yamlMergeStrategy: override
  yamlTemplate: ""
awsSecurityGroupPolicies:
  enabled: false
  policies:
  - name: ""
    podSelector: {}
    securityGroupIds: []
checkDeprecation: true
clusterZone: cluster.local
controller:
  JCasC:
    authorizationStrategy: |-
      loggedInUsersCanDoAnything:
        allowAnonymousRead: false
    configMapAnnotations: {}
    configScripts: {}
    configUrls: []
    defaultConfig: true
    overwriteConfiguration: false
    security:
      apiToken:
        creationOfLegacyTokenEnabled: false
        tokenGenerationOnCreationEnabled: false
        usageStatisticsEnabled: true
    securityRealm: |-
      local:
        allowsSignup: false
        enableCaptcha: false
        users:
        - id: "${chart-admin-username}"
          name: "Jenkins Admin"
          password: "${chart-admin-password}"
  additionalExistingSecrets: []
  additionalPlugins: []
  additionalSecrets: []
  admin:
    createSecret: true
    existingSecret: ""
    password: null
    passwordKey: jenkins-admin-password
    userKey: jenkins-admin-user
    username: admin
  affinity: {}
  agentListenerEnabled: true
  agentListenerExternalTrafficPolicy: null
  agentListenerHostPort: null
  agentListenerLoadBalancerIP: null
  agentListenerLoadBalancerSourceRanges:
  - 0.0.0.0/0
  agentListenerNodePort: null
  agentListenerPort: 50000
  agentListenerServiceAnnotations: {}
  agentListenerServiceType: ClusterIP
  backendconfig:
    annotations: {}
    apiVersion: extensions/v1beta1
    enabled: false
    labels: {}
    name: null
    spec: {}
  cloudName: kubernetes
  clusterIp: null
  componentName: jenkins-controller
  containerEnv: []
  containerEnvFrom: []
  containerSecurityContext:
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    runAsGroup: 1000
    runAsUser: 1000
  csrf:
    defaultCrumbIssuer:
      enabled: true
      proxyCompatability: true
  customInitContainers: []
  customJenkinsLabels: []
  disableRememberMe: false
  disabledAgentProtocols:
  - JNLP-connect
  - JNLP2-connect
  enableRawHtmlMarkupFormatter: false
  enableServiceLinks: false
  executorMode: NORMAL
  existingSecret: null
  extraPorts: []
  fsGroup: 1000
  googlePodMonitor:
    enabled: false
    scrapeEndpoint: /prometheus
    scrapeInterval: 60s
  healthProbes: true
  hostAliases: []
  hostNetworking: false
  httpsKeyStore:
    disableSecretMount: false
    enable: false
    fileName: keystore.jks
    httpPort: 8081
    jenkinsHttpsJksPasswordSecretKey: https-jks-password
    jenkinsHttpsJksPasswordSecretName: ""
    jenkinsHttpsJksSecretKey: jenkins-jks-file
    jenkinsHttpsJksSecretName: ""
    jenkinsKeyStoreBase64Encoded: null
    password: password
    path: /var/jenkins_keystore
  image:
    pullPolicy: Always
    registry: docker.io
    repository: jenkins/jenkins
    tag: null
    tagLabel: jdk21
  imagePullSecretName: null
  ingress:
    annotations: {}
    apiVersion: extensions/v1beta1
    enabled: false
    hostName: null
    labels: {}
    path: null
    paths: []
    resourceRootUrl: null
    tls: []
  initConfigMap: null
  initContainerEnv: []
  initContainerEnvFrom: []
  initContainerResources: {}
  initScripts: {}
  initializeOnce: false
  installLatestPlugins: true
  installLatestSpecifiedPlugins: false
  installPlugins:
  - kubernetes:4358.vcfd9c5a_0a_f51
  - workflow-aggregator:608.v67378e9d3db_1
  - git:5.7.0
  - configuration-as-code:1985.vdda_32d0c4ea_b_
  javaOpts: null
  jenkinsAdminEmail: null
  jenkinsHome: /var/jenkins_home
  jenkinsOpts: null
  jenkinsRef: /usr/share/jenkins/ref
  jenkinsUriPrefix: null
  jenkinsUrl: null
  jenkinsUrlProtocol: null
  jenkinsWar: /usr/share/jenkins/jenkins.war
  jmxPort: null
  legacyRemotingSecurityEnabled: false
  lifecycle: {}
  loadBalancerIP: null
  loadBalancerSourceRanges:
  - 0.0.0.0/0
  markupFormatter: plainText
  nodePort: null
  nodeSelector: {}
  numExecutors: 0
  overwritePlugins: false
  overwritePluginsFromImage: true
  podAnnotations: {}
  podDisruptionBudget:
    annotations: {}
    apiVersion: policy/v1beta1
    enabled: false
    labels: {}
    maxUnavailable: "0"
  podLabels: {}
  podSecurityContextOverride: null
  priorityClassName: null
  probes:
    livenessProbe:
      failureThreshold: 5
      httpGet:
        path: '{{ default "" .Values.controller.jenkinsUriPrefix }}/login'
        port: http
      initialDelaySeconds: null
      periodSeconds: 10
      timeoutSeconds: 5
    readinessProbe:
      failureThreshold: 3
      httpGet:
        path: '{{ default "" .Values.controller.jenkinsUriPrefix }}/login'
        port: http
      initialDelaySeconds: null
      periodSeconds: 10
      timeoutSeconds: 5
    startupProbe:
      failureThreshold: 12
      httpGet:
        path: '{{ default "" .Values.controller.jenkinsUriPrefix }}/login'
        port: http
      periodSeconds: 10
      timeoutSeconds: 5
  projectNamingStrategy: standard
  prometheus:
    alertingRulesAdditionalLabels: {}
    alertingrules: []
    enabled: false
    metricRelabelings: []
    prometheusRuleNamespace: ""
    relabelings: []
    scrapeEndpoint: /prometheus
    scrapeInterval: 60s
    serviceMonitorAdditionalLabels: {}
    serviceMonitorNamespace: null
  publishNotReadyAddresses: null
  resources:
    limits:
      cpu: 2000m
      memory: 4096Mi
    requests:
      cpu: 50m
      memory: 256Mi
  route:
    annotations: {}
    enabled: false
    labels: {}
    path: null
  runAsUser: 1000
  schedulerName: ""
  scriptApproval: []
  secondaryingress:
    annotations: {}
    apiVersion: extensions/v1beta1
    enabled: false
    hostName: null
    labels: {}
    paths: []
    tls: null
  secretClaims: []
  securityContextCapabilities: {}
  serviceAnnotations: {}
  serviceEnabled: true
  serviceExternalTrafficPolicy: null
  serviceLabels: {}
  servicePort: 8080
  serviceType: ClusterIP
  shareProcessNamespace: false
  sidecars:
    additionalSidecarContainers: []
    configAutoReload:
      additionalVolumeMounts: []
      containerSecurityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
      enabled: true
      env: []
      envFrom: []
      folder: /var/jenkins_home/casc_configs
      image:
        registry: docker.io
        repository: kiwigrid/k8s-sidecar
        tag: 1.30.7
      imagePullPolicy: IfNotPresent
      logging:
        configuration:
          backupCount: 3
          formatter: JSON
          logLevel: INFO
          logToConsole: true
          logToFile: false
          maxBytes: 1024
          override: false
      reqRetryConnect: 10
      resources: {}
      scheme: http
      skipTlsVerify: false
      sleepTime: null
      sshTcpPort: 1044
  statefulSetAnnotations: {}
  statefulSetLabels: {}
  targetPort: 8080
  terminationGracePeriodSeconds: null
  terminationMessagePath: null
  terminationMessagePolicy: null
  testEnabled: true
  tolerations: []
  topologySpreadConstraints: {}
  updateStrategy: {}
  usePodSecurityContext: true
credentialsId: null
extraLabels: {}
fullnameOverride: null
helmtest:
  bats:
    image:
      registry: docker.io
      repository: bats/bats
      tag: 1.12.0
kubernetesURL: https://kubernetes.default
nameOverride: null
namespaceOverride: null
networkPolicy:
  apiVersion: networking.k8s.io/v1
  enabled: false
  externalAgents:
    except: []
    ipCIDR: null
  internalAgents:
    allowed: true
    namespaceLabels: {}
    podLabels: {}
persistence:
  accessMode: ReadWriteOnce
  annotations: {}
  dataSource: {}
  enabled: true
  existingClaim: null
  labels: {}
  mounts: []
  size: 8Gi
  storageClass: null
  subPath: null
  volumes: []
rbac:
  create: true
  readSecrets: false
  useOpenShiftNonRootSCC: false
renderHelmLabels: true
serviceAccount:
  annotations: {}
  automountServiceAccountToken: true
  create: true
  extraLabels: {}
  imagePullSecretName: null
  name: null
serviceAccountAgent:
  annotations: {}
  automountServiceAccountToken: true
  create: false
  extraLabels: {}
  imagePullSecretName: null
  name: null
